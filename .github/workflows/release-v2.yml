name: Release Packages

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  get-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: ${{ github.ref_name }}

      - name: Extract version
        id: version
        run: |
          VERSION=$(grep 'PKG_VERSION:=' ./Makefile | awk -F '=' '{print $2}' | tr -d ' ')
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "New Version: ${VERSION}"

  release:
    name: Release ${{ matrix.arch }}-${{ matrix.branch }}
    needs: get-version
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        arch:
          - x86_64
        branch:
          - openwrt-24.10
          - SNAPSHOT

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up build environment
        run: |
          echo "::group::Setting up build environment for ${{ matrix.arch }}-${{ matrix.branch }}"
          mkdir -p feeds/luci-theme-rtawrt artifacts
          rsync -av --exclude='.git/' --exclude='feeds/' --exclude='artifacts/' ./ ./feeds/luci-theme-rtawrt/
          echo "::endgroup::"

      - name: Build package
        uses: openwrt/gh-action-sdk@main
        env:
          ARCH: ${{ matrix.arch }}-${{ matrix.branch }}
          ARTIFACTS_DIR: ${{ github.workspace }}/artifacts
          FEED_DIR: ${{ github.workspace }}/feeds
          PACKAGES: luci-theme-rtawrt
          NO_REFRESH_CHECK: true

      - name: List built packages
        run: |
          echo "::group::Built packages"
          find ${{ github.workspace }}/artifacts -type f -name "*.ipk" -o -name "*.apk" | sort
          echo "::endgroup::"

      - name: Prepare release artifacts
        run: |
          # Create release artifacts directory
          mkdir -p ${{ github.workspace }}/release-artifacts

          # Handle different file extensions based on branch
          if [[ "${{ matrix.branch }}" == "SNAPSHOT" ]]; then
            # For SNAPSHOT branch - copy APK files
            find ${{ github.workspace }}/artifacts/bin/packages -name "*.apk" -exec cp {} ${{ github.workspace }}/release-artifacts/ \; || true
            find ${{ github.workspace }}/artifacts/bin/targets -name "*.apk" -exec cp {} ${{ github.workspace }}/release-artifacts/ \; || true
            
            # Add arch and branch info to filenames (remain in the workspace directory)
            cd ${{ github.workspace }}/release-artifacts
            for f in *.apk; do
              [ -f "$f" ] || continue
              mv "$f" "${f%.apk}_${{ matrix.arch }}_${{ matrix.branch }}.apk"
            done
          else
            # For other branches - copy IPK files
            find ${{ github.workspace }}/artifacts/bin/packages -name "*.ipk" -exec cp {} ${{ github.workspace }}/release-artifacts/ \; || true
            find ${{ github.workspace }}/artifacts/bin/targets -name "*.ipk" -exec cp {} ${{ github.workspace }}/release-artifacts/ \; || true
            
            # Add arch and branch info to filenames (remain in the workspace directory)
            cd ${{ github.workspace }}/release-artifacts
            for f in *.ipk; do
              [ -f "$f" ] || continue
              mv "$f" "${f%.ipk}_${{ matrix.arch }}_${{ matrix.branch }}.ipk"
            done
          fi

          # Debug: list contents
          echo "Contents of release-artifacts directory:"
          ls -la ${{ github.workspace }}/release-artifacts/

      - name: Upload release artifacts
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ needs.get-version.outputs.version }}"
          files: |
            ${{ github.workspace }}/release-artifacts/*
          generate_release_notes: true
          draft: false
          name: "v${{ needs.get-version.outputs.version }} Release"
          body: |
            ## Release v${{ needs.get-version.outputs.version }}

            ### Packages
            Packages are available for the following configurations:

            ### Installation
            For standard OpenWrt (IPK):
            ```
            opkg install luci-theme-rtawrt_${{ needs.get-version.outputs.version }}_*.ipk
            ```

            For SNAPSHOT (APK):
            ```
            apk add luci-theme-rtawrt_${{ needs.get-version.outputs.version }}_*.apk
            ```
